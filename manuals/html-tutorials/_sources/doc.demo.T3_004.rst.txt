===================================
Beta-Lactamase Experimental Phasing
===================================

In this tutorial we shall learn the basics of Experimental Phasing in CCP4 Cloud, using both automatic and staged (manual) approaches. The tutorial is based on the example of Beta-lactamase structure.

``1.`` The sequence data and reflection data were already imported to the project.

``2.``	The easiest (but not necessarily the fastest) way to solve a structure in CCP4 Cloud is to use a suitable automatic workflow: **Click on last file import task => add job => Workflows => Automated Experimental Phasing with Crank-2**

.. image:: images/demo.EPworkflow.png
        :align: center
        :scale: 40 %

Specify **Zn** atom type as **main anomalous scatterer**. Run the workflow.

**a.**	Firstly, the workflow uses `Asymmetric Unit definition <https://cloud.ccp4.ac.uk/manuals/html-taskref/doc.task.ASUDef.html>`_ task to make a hypothesis on crystal composition, such as expected number of chains and solvent percent.

.. note:: Good hypothesis is important for making correct estimation of solvent fraction; grossly incorrect estimate may have a negative impact on the success of Experimental Phasing.


**b.**	After ASU is defined, the workflow starts `Crank-2 <https://cloud.ccp4.ac.uk/manuals/html-taskref/doc.task.Crank2.html>`_ automatic structure solver for `Experimental Phasing <https://cloud.ccp4.ac.uk/manuals/html-taskref/Experimental_Phasing.html>`_.

Crank-2 will take about 30-40 minutes to solve the structure. During this time, try to solve Beta-lactamase structure manually, using a set of individual programs.

``3.``	 Just like the workflow, start phasing procedure with making a hypothesis on crystal composition, that is, guessing the correct number of protein chains in the Asymmetric Unit. Run the `Asymmetric Unit definition <https://cloud.ccp4.ac.uk/manuals/html-taskref/doc.task.ASUDef.html>`_. Task will also calculate the corresponding solvent content. **Click on last file import task => add next job => All task => Asymmetric Unit and Structure Revision => Asymmetric Unit Contents**

When preparing the task for run, specify **Zn** as **Main anomalous scatterer**.

After the task finishes, inspect **verdict** section in the report page. The verdict will help you to assess the likelihood of having correct ASU composition.

.. note:: ASU composition remains a hypothesis until the structure is solved. It is not unusual to have it reconsidered in case of difficulties with phasing or refinement.

``4.`` In first step, anomalous signal in the reflection dataset is used to find the location of anomalous scatterers (the heavy-atom substructure). The substructure is found with ShelxCD software, which may be used as part of Crank-2 automatic pipeline (see task **Substructure Search with SHELX via Crank-2** in the Experimental Phasing section of the Task List), or with the dedicated ShelxCD task (**Substructure Search with SHELX-C/D**). Let’s choose the latter. Start new Project branch from the ASU definition task: **add next job => All task => Experimental phasing => Substructure Search with SHELX-C/D (SAD)**.

For speed, limit number of trials to 100 (*not recommended unless you are working with data that you are familiar with*).

``5.``	Make sure that the substructure is likely to be found: **CC** :subscript:`All` in ShelxCD  main log file should be **above 25%** (*scroll till the end of the main log file*)

``6.``	Macromolecular phases are calculated using substructure phases and reflection data with **Phaser-EP** software. The Phaser-EP task calculates protein phases for the original and inversed hands, corresponding to mutually-inversed heavy-atom substructures. Run the task: **add next job => All task => Experimental phasing => Experimental Phasing with Phaser-EP**

Phaser-EP will improve the substructure, calculate inversed substructure and estimate macromolecular phases

.. Note::
        do not mistake substructure phases, calculated in ShelxCD task, with macromolecular phases

Examine the **verdict** section in Phaser output, which contains the analysis of task performance.

The average **FOM** (Figure Of Merit) is the phase quality indicator: FOM values **above 0.3** correspond to **good phases** (which may lead to an interpretable electron density map) and values **below 0.15** indicate **poor phases** (which make model building difficult or impossible).

Try to identify correct hand from Phaser-EP results by visual inspection of the density by in **UglyMol** viewer.

Density improvement obviously required in both hands.

``7.`` Phaser-EP job produces two structure revisions, one for the original and one for the inverse hands. Unless the heavy-atom substructure has inversion centre, only one hand's phases are suitable for model building. At high quality of phases, the correct hand can be identified by visual inspection of the corresponding electron density map. However, in most cases, the phases need to be improved (modified) in order to make a confident choice. Even more, automatic building in both hands may need to be attempted in order to make the ultimate decision. Therefore, perform density modification in each hand  using the `Density Modification with Parrot <https://cloud.ccp4.ac.uk/manuals/html-taskref/doc.task.Parrot.html>`_ task.

.. note:: the density modification jobs should both descend from Phaser-EP job, because they need structure revisions created by it. This means that project tree will branch at this point. To make your project easily interpretable, annotate the branches by starting them with appropriate remarks: first, place remark “Original hand”, then clone it and rename as “Inversed hand”.

``8.``	Append Parrot task to the “Original hand” remark and make sure that the “original hand” revision from Phaser-EP (**phaser-ep-original_hand**) is selected in **Structure revision**. State **heavy-athom(Zn) substructure** as **model for NCS detection**. Parrot uses substructure to define initial values of NCS operations. Start the task

``9.``	Append Parrot task to the “Inversed hand” remark and make sure that the “Inverted hand” revision from Phaser-EP **phaser-ep-inverted_hand** is selected in **Structure revision**. State **heavy-athom(Zn) substructure** as **model for NCS detection**. Start the task

.. note:: jobs in different branches can be run simultaneously, therefore, there is no need to wait for Parrot job in the "Original hand" branch to finish before starting Parrot job in the "Inversed hand" branch!

``10.``	After density modification (Parrot) tasks finished, analyse FOMs and perform visual inspection of the modified density in **UglyMol** viewer (the corresponding launch button is found in *task output*).

Are resulting maps from Parrot jobs good enough for deciding on the hand?

``11.`` Continue each project branch with the model building with `Buccaneer <https://cloud.ccp4.ac.uk/manuals/html-taskref/doc.task.Buccaneer.html>`_ in both hands.

Could more cycles of model building be useful?

*You may clone and run another Buccaneer job(s) if you think it could*

``12.`` The builds difference is not significant in this particular case. This suggests that the hands may be very close to each other. Perform structure comparison with `Gesamt <https://cloud.ccp4.ac.uk/manuals/html-taskref/doc.task.Gesamt.html>`_ (use multiple selection from the “Original” and “Inversed” branches):

.. image:: images/demo.multiple_selection.jpg
        :align: center
        :scale: 30 %

**Select both models => add next job => All task =>  Toolbox => Pairwise Structural Alignment with GESAMT**

``13.`` Further refinement can be conveniently done by the **Automated refinement and ligand fitting workflow**

.. image:: images/Demo.CCP4MG_workflow.png
        :align: center
        :scale: 40 %


**Additional work:**

a.	Use `Acorn <https://cloud.ccp4.ac.uk/manuals/html-taskref/doc.task.Acorn.html>`_ instead of Parrot for density improvement: does it make any difference?

b.	Try using different model builders instead of Buccaneer: CCP4Build and `Arp/wArp <https://cloud.ccp4.ac.uk/manuals/html-taskref/doc.task.ArpWarp.html>`_ (*should be installed as 3rd-party software on your device, which can be done with CCP4 Package Manager*)

c.	Inspect built structure in Coot and spot problematic places. Start **Model Building with Coot** as a child node of the Refmac job and correct several side chains.

.. note:: Coot task is available only if CCP4 Cloud is started through the local installation of CCP4 using launcher with |ccp4cloud_remote| icon.

.. |ccp4cloud_remote| image:: images/ccp4cloud_remote.png
   :width: 20
   :height: 20

Are there disagreement between electron density and suggested sequence?

Correct them, refine and check the effect on R-factors.
