.. _cloudrun:

==================================================
Starting CCP4 Cloud Projects from the Command Line
==================================================

CCP4 Cloud projects can be initiated and executed from the command line, which can be useful in various scenarios. For instance, during a data collection session at a synchrotron beamline, you might send reflection data, sequences, and optional structural homolog or ligand descriptions directly to a specified CCP4 Cloud account, automatically initiating an appropriate structure solution workflow. Additionally, large series of structure solution projects can be started using custom scripts, saving time otherwise spent navigating CCP4 Cloud's graphical interface.

.. note::
  The functionality described in this article requires a local CCP4 setup version 8.0.003 or higher.

----------------
CloudRun Utility
----------------

The CloudRun utility, included in the `CCP4 Software Suite <https://www.ccp4.ac.uk/download/>`_, can create projects, upload data, and start an automatic structure solution workflow in a single step, as shown below (CCP4 8.0.003+ environment assumed on Linux/Mac OSX; **use CCP4 Console** on Windows): ::

  $ cloudrun -c command_file

Here, ``command_file`` is a text file containing instructions in keyword-value pairs (described below). Alternatively, you can provide these instructions directly using the following syntax: ::

  $ cloudrun -i <<eof
  keyword value
  .......
  eof 

In this case, the set of keyword-value pairs is supplied via the standard input stream.

The content of ``command_file`` depends on the required task, which can be generated using this command: ::

  $ cloudrun -t task > command_file

where ``task`` is one of the following:

  - ``import``: Creates a standard project, `imports data <../html-taskref/doc.task.Import.html>`_, and stops.
  - ``hop-on``: Creates a `hop-on <../html-taskref/doc.task.Migrate.html>`_ project, imports data, and stops.
  - ``auto-af2``: Creates a standard project, imports data, and starts a `workflow <../html-taskref/doc.task.WFlowAFMR.html>`_ based on AlphaFold-2 structure prediction.
  - ``auto-mr``: Creates a standard project, imports data, and starts the `Auto-MR workflow <../html-taskref/doc.task.WFlowAMR.html>`_ using the `MrBump <../html-taskref/doc.task.MrBump.html>`_ and `Simbad <../html-taskref/doc.task.Simbad.html>`_ pipelines.
  - ``auto-ep``: Creates a standard project, imports data, and starts the `Auto-EP workflow <../html-taskref/doc.task.WFlowAEP.html>`_, leveraging the `Crank-2 <../html-taskref/doc.task.Crank2.html>`_ pipeline.
  - ``auto-ref``: Creates a standard project, imports data, and starts the `Auto-REL workflow <../html-taskref/doc.task.WFlowREL.html>`_, performing automatic structure refinement with Refmac parameter optimization and water molecule fitting.
  - ``dimple``: Creates a standard project, imports data, and starts the `Dimple <../html-taskref/doc.task.Dimple.html>`_ workflow for rapid ligand blob identification and fitting.

Example: ::

  $ cloudrun -t auto-af2 > auto-af2.com
  $ cat auto-af2.com
  # CloudRun template command file for the auto-af2 task.
  #
  # The task uploads specified files, creates a CCP4 Cloud Project (if it
  # does not already exist), and starts the "Auto-AFMR" workflow (this
  # requires AlphaFold, OpenFold, or ColabFold to be installed in CCP4 Cloud).
  #
  # Notes: a) Lines starting with "#" are comments.
  #        b) The order of lines is insignificant.
  #        c) CloudRun tasks are added at the Project's root.
  #
  URL         https://ccp4cloud.server    # mandatory
  #
  # User authentication: Specify either inline or via a file.
  #
  USER        user_login                  # mandatory
  CLOUDRUN_ID aaaa-bbbb-cccc-dddd         # mandatory, found in "My Account"
  #
  # Alternatively, provide credentials via a file:
  # AUTH_FILE   /path/to/auth.dat         # mandatory
  #
  PROJECT     project_id                  # mandatory
  TITLE       Optional Project Title      # used only if creating a project
  FOLDER      Optional Project Folder     # used only if creating a project
  TASK        auto-af2                    # mandatory
  TASK_NAME   Optional Task Name          # default name is used if omitted
  #
  HKL         /path/to/hkl.mtz               # reflection data
  SEQ_PROTEIN /path/to/file.[seq|fasta|pir]  # protein sequence
  #
  # Provide either SMILES or LIG_CODE for optional ligand description, but not both.
  #
  SMILES      smiles-string  # ligand SMILES string (not quoted)
  LIG_CODE    ATP            # 3-character ligand code (e.g., ATP)
  $

**The use of the CloudRun utility is capped by the maximum number of runs per day** (*configurable*).

.. important:: The remaining number of available runs is displayed on CCP4 Cloud pages only if it is below the maximum.

.. note:: The CloudRun quota may be adjusted by the CCP4 Cloud administrator for individual users.
