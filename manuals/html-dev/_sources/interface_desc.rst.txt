==========================
Task Interface Description
==========================


---------------------
Parameter Description
---------------------

~~~~~~~~~~~~~~~~~~~~~~~~
Common description items
~~~~~~~~~~~~~~~~~~~~~~~~

**keyword**
    optional field, which may pass program's keyword, corresponding to the
    parameter, to python layer, e.g., ::
    
        keyword : 'NCYCLES'

**tooltip**
    mandatory field, specifying tooltip that pops up at mouse hovering over
    the parameter widget. For example: ::
    
        tooltip : 'Number of cycles'
        
**label** 
    label preceding the input field, e.g., ::
    
        label : 'N<sub>cycles</sub>'
        
**align**
    optional horizontal alignment of item's label: ::
    
        align    : 'right'  // or 'left', or 'center'

**label2** 
    optional label, following the input field
    
**align2**
    optional horizontal alignment for ``label2``
    
**reportas**
    optional proxy name for input parameter to be used in messages from input
    validator. By default, invalid input parameter is referenced by ``label``.
    Example: ::
    
        reportas : 'Number of cycles'
    
**iwidth**
    optional width of input element of the parameter widget, in pixels or
    percents: ::
    
        iwidth : 240
        iwidth : '50%'
    
**value**
    mandatory (where used), initial value of the parameter, given as string
    
**placeholder**
    optional prompt displayed in grey, when parameter value is not given
    
**default**
    optional default value which will be used instead of **value** if user
    gave no input. In difference of *placeholder*, default value is copied
    to *value* field if the latter is left empty
    
**position**
    mandatory, parameter's grid position: ::
    
        position : [row,col,rowSpan,colSpan]
    
    interpreted as in HTML tags



~~~~~~~~
Combobox
~~~~~~~~

Combobox (selector) provides a choice of one of encoded options. ::

    KEY_SEL : {
        type     : 'combobox',
        keyword  : 'keyword',
        label    : 'Sequence type:',
        align    : 'left',              // optional
        reportas : 'Type of sequence',  // optional
        tooltip  : 'Choose an option',
        range    : ['none|Select one',
                    'protein|Protein',
                    'dna|DNA',
                    'rna|RNA'
                   ],
        value    : 'none',
        iwidth   : 160,                        // optional
        label2   : '<i>(must be chosen)</i>',  // optional
        align2   : 'left',                     // optional
        position : [0,0,1,4]
    }

The range list is composed of strings like ::

    'value|Text'
    
where ``value`` is the value returned by widget if user selects the corresponding 
item, and ``Text`` is displayed in the combobox.


~~~~~~~~~~~~~
Integer Input
~~~~~~~~~~~~~

Integer Input field is described as follows: ::

    KEY : {
            type     : 'integer', // '_' suffix means blank value is allowed
            keyword  : 'helix',   // may be the "real" keyword for job input stream
            label    : 'Number of copies to find',
            align    : 'left',              // optional
            reportas : 'Type of sequence',  // optional
            tooltip  : 'Choose a value between 1 and 200, or leave ' +
                        'blank for automatic choice',
            range    : [1,200],  // may be absent (no limits) or must
                                 // be one of the following:
                                 //   ['*',max]  : limited from top
                                 //   [min,'*']  : limited from bottom
                                 //   [min,max]  : limited from top and bottom
            value    : 10,       // value to be paired with the keyword
            placeholder : 'auto',         // optional
            default  : 10,                // optional
            iwidth   : 40,                // optional
            label2   : '<i>(copies)</i>', // optional
            align2   : 'left',            // optional
            position : [4,0,1,1] // [row,col,rowSpan,colSpan]
          }

**type**
    may be *integer* or *integer_*, the latter will pass input validator if
    user gave no value and left the field blank


~~~~~~~~~
Text Area
~~~~~~~~~

Text Area provides an input of multi-line textual information. ::

    KEY_TA: {
        type        : 'textarea',
        keyword     : 'keyword', 
        tooltip     : 'Advanced keywords',
        placeholder : 'Type additional keywords here',
        nrows       : 5,         // optional
        ncols       : 90,        // optional
        iwidth      : 500,       // optional
        value       : '',
        position    : [2,0,1,6]
    }
